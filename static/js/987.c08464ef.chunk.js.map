{"version":3,"file":"static/js/987.c08464ef.chunk.js","mappings":"uHAAA,MAkBA,EAlBkBA,UAChB,MACMC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAc,2PAIlB,IACE,MAAMC,QAAYC,MAVR,+DAUmBN,GAC7B,aAAaK,EAAIE,MACnB,CAAE,MAAOC,GACP,OAAOC,QAAQC,IAAIF,EACrB,E,4ECfF,MAmBA,EAnBgBT,UACd,MAAMY,EAAG,sCAAAC,OAAyCC,EAAO,6BAEnDb,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAc,2PAIlB,IACE,MAAMC,QAAYC,MAAMK,EAAKX,GAC7B,aAAaK,EAAIE,MACnB,CAAE,MAAOC,GACP,OAAOC,QAAQC,IAAIF,EACrB,G,0BCdK,MAAMM,EAAMC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,QAEhBC,EAAOJ,EAAAA,GAAOK,EAACC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,Q,aCF5B,MAcA,EAdaI,IAA0C,IAAzC,KAAEC,EAAI,UAAEC,EAAS,eAAEC,GAAgBH,EAC/C,OACEI,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACf,EAAG,CACFgB,IAAG,mCAAAlB,OAAqCa,EAAc,QACtDM,IAAKR,KAGPM,EAAAA,EAAAA,KAACV,EAAI,CAAAS,SAAEL,KACPG,EAAAA,EAAAA,MAACP,EAAI,CAAAS,SAAA,CAAC,cAAYJ,SCiDxB,EArDkBQ,KAAO,IAADC,EACtB,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,CAAC,IACrCG,EAAMC,IAAWJ,EAAAA,EAAAA,UAAS,IAG3BK,EAAsB,QAAjBR,GADMS,EAAAA,EAAAA,MACMC,aAAK,IAAAV,OAAA,EAAdA,EAAgBQ,MA4B9B,OA1BAG,EAAAA,EAAAA,WAAU,KACR,WACE,MAAMvC,QAAYwC,EAAAA,EAAAA,KAClBV,EAAU9B,EAAI6B,OACf,EAHD,IAIC,KAEHU,EAAAA,EAAAA,WAAU,KACR,WACE,MAAMvC,QAAYyC,EAAQL,EAAMM,IAChCP,EAAQnC,EAAIkC,KACb,EAHD,IAIC,KAEHK,EAAAA,EAAAA,WAAU,KACR,GAAIV,EAAOc,OAAS,EAAG,CACrB,MAAMC,EAAY,CAAC,EAEnBf,EAAOgB,QAASC,IACdF,EAAUE,EAAMJ,IAAMI,EAAM5B,OAG9Be,EAAaW,EACf,GACC,CAACf,KAGFR,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SACCU,EAAKa,IAAKC,IACT,GAAIA,EACF,OACExB,EAAAA,EAAAA,KAACyB,EAAI,CACH/B,KAAM8B,EAAE9B,KACRC,UAAW6B,EAAE7B,UACbC,eAAgB4B,EAAEE,cACbF,EAAEN,S","sources":["api/getGenres.js","api/getCast.js","pages/MovieCast/Cast/styles/Cast.styled.js","pages/MovieCast/Cast/Cast.jsx","pages/MovieCast/MovieCast.jsx"],"sourcesContent":["const getGenres = async () => {\n  const url = \"https://api.themoviedb.org/3/genre/movie/list?language=en-US\";\n  const options = {\n    method: \"GET\",\n    headers: {\n      accept: \"application/json\",\n      Authorization: `Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4YTg5ZGU3NDM0N2Q4Mjg4OGQyZDFjZTU5ZGQ2NTZhZSIsIm5iZiI6MTc1NTc3NjU3NC4zNjcsInN1YiI6IjY4YTcwNjNlNmY3MDIxYTllMWE4MWNiNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.r97B4_cAktYcRzkopNxfhWlk8ECT4zxtpkqOo7E8H64`,\n    },\n  };\n\n  try {\n    const res = await fetch(url, options);\n    return await res.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\n\nexport default getGenres;\n","const getCast = async (movieId) => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US\n`;\n  const options = {\n    method: \"GET\",\n    headers: {\n      accept: \"application/json\",\n      Authorization: `Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4YTg5ZGU3NDM0N2Q4Mjg4OGQyZDFjZTU5ZGQ2NTZhZSIsIm5iZiI6MTc1NTc3NjU3NC4zNjcsInN1YiI6IjY4YTcwNjNlNmY3MDIxYTllMWE4MWNiNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.r97B4_cAktYcRzkopNxfhWlk8ECT4zxtpkqOo7E8H64`,\n    },\n  };\n\n  try {\n    const res = await fetch(url, options);\n    return await res.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\n\nexport default getCast;\n","import styled from \"styled-components\";\n\nexport const Img = styled.img``;\n\nexport const Text = styled.p``;","import { Img, Text } from \"./styles/Cast.styled\";\n\nconst Cast = ({ name, character, profilePicture }) => {\n  return (\n    <>\n      <Img\n        src={`https://image.tmdb.org/t/p/w200/${profilePicture}.jpg`}\n        alt={name}\n      />\n\n      <Text>{name}</Text>\n      <Text>Character: {character}</Text>\n    </>\n  );\n};\n\nexport default Cast;\n","import { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport getGenres from \"../../api/getGenres\";\nimport getCast from \"../../api/getCast\";\n// import MovieDesc from \"../../components/MovieDesc/MovieDesc\";\nimport Cast from \"./Cast/Cast\";\n\nconst MovieCast = () => {\n  const [genres, setGenres] = useState([]);\n  const [genresMap, setGenresMap] = useState({});\n  const [cast, setCast] = useState([]);\n\n  const location = useLocation();\n  const movie = location.state?.movie;\n\n  useEffect(() => {\n    (async () => {\n      const res = await getGenres();\n      setGenres(res.genres);\n    })();\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      const res = await getCast(movie.id);\n      setCast(res.cast);\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (genres.length > 0) {\n      const genresObj = {};\n\n      genres.forEach((genre) => {\n        genresObj[genre.id] = genre.name;\n      });\n\n      setGenresMap(genresObj);\n    }\n  }, [genres]);\n\n  return (\n    <>\n      <hr />\n      {cast.map((c) => {\n        if (c) {\n          return (\n            <Cast\n              name={c.name}\n              character={c.character}\n              profilePicture={c.profile_path}\n              key={c.id}\n            />\n          );\n        }\n      })}\n    </>\n  );\n};\n\nexport default MovieCast;\n"],"names":["async","options","method","headers","accept","Authorization","res","fetch","json","err","console","log","url","concat","movieId","Img","styled","img","_templateObject","_taggedTemplateLiteral","Text","p","_templateObject2","_ref","name","character","profilePicture","_jsxs","_Fragment","children","_jsx","src","alt","MovieCast","_location$state","genres","setGenres","useState","genresMap","setGenresMap","cast","setCast","movie","useLocation","state","useEffect","getGenres","getCast","id","length","genresObj","forEach","genre","map","c","Cast","profile_path"],"sourceRoot":""}