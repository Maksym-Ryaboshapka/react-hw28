{"version":3,"file":"static/js/579.13d6e975.chunk.js","mappings":"uHAAA,MAkBA,EAlBkBA,UAChB,MACMC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAc,2PAIlB,IACE,MAAMC,QAAYC,MAVR,+DAUmBN,GAC7B,aAAaK,EAAIE,MACnB,CAAE,MAAOC,GACP,OAAOC,QAAQC,IAAIF,EACrB,E,4ECfF,MAmBA,EAnBmBT,UACjB,MAAMY,EAAG,sCAAAC,OAAyCC,EAAO,6BAEnDb,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAc,2PAIlB,IACE,MAAMC,QAAYC,MAAMK,EAAKX,GAC7B,aAAaK,EAAIE,MACnB,CAAE,MAAOC,GACP,OAAOC,QAAQC,IAAIF,EACrB,G,0BCdK,MAAMM,EAAOC,EAAAA,GAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,QAEhBC,EAAOJ,EAAAA,GAAOK,EAACC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,Q,aCF5B,MASA,EATeI,IAA0B,IAAzB,OAAEC,EAAM,QAAEC,GAASF,EACjC,OACEG,EAAAA,EAAAA,MAACX,EAAI,CAAAY,SAAA,EACHD,EAAAA,EAAAA,MAACN,EAAI,CAAAO,SAAA,CAAC,WAASH,MACfI,EAAAA,EAAAA,KAACR,EAAI,CAAAO,SAAEF,QC8Cb,EA7CqBI,KAAO,IAADC,EACzB,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,CAAC,IACrCG,EAASC,IAAcJ,EAAAA,EAAAA,UAAS,IAGjCK,EAAsB,QAAjBR,GADMS,EAAAA,EAAAA,MACMC,aAAK,IAAAV,OAAA,EAAdA,EAAgBQ,MA4B9B,OA1BAG,EAAAA,EAAAA,WAAU,KACR,WACE,MAAMnC,QAAYoC,EAAAA,EAAAA,KAClBV,EAAU1B,EAAIyB,OACf,EAHD,IAIC,KAEHU,EAAAA,EAAAA,WAAU,KACR,WACE,MAAMnC,QAAYqC,EAAWL,EAAMM,IACnCP,EAAW/B,EAAIuC,QAChB,EAHD,IAIC,KAEHJ,EAAAA,EAAAA,WAAU,KACR,GAAIV,EAAOe,OAAS,EAAG,CACrB,MAAMC,EAAY,CAAC,EAEnBhB,EAAOiB,QAASC,IACdF,EAAUE,EAAML,IAAMK,EAAMC,OAG9Bf,EAAaY,EACf,GACC,CAAChB,KAGFH,EAAAA,EAAAA,KAAAuB,EAAAA,SAAA,CAAAxB,UACEC,EAAAA,EAAAA,KAAAuB,EAAAA,SAAA,CAAAxB,SACGS,EAAQU,OAAS,EAAKV,EAAQgB,IAAKC,IAC3BzB,EAAAA,EAAAA,KAAC0B,EAAM,CAAC9B,OAAQ6B,EAAE7B,OAAQC,QAAS4B,EAAE5B,SAAc4B,EAAET,MACxDhB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,2C","sources":["api/getGenres.js","api/getReviews.js","pages/MovieReviews/Review/styles/Review.styled.js","pages/MovieReviews/Review/Review.jsx","pages/MovieReviews/MovieReviews.jsx"],"sourcesContent":["const getGenres = async () => {\n  const url = \"https://api.themoviedb.org/3/genre/movie/list?language=en-US\";\n  const options = {\n    method: \"GET\",\n    headers: {\n      accept: \"application/json\",\n      Authorization: `Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4YTg5ZGU3NDM0N2Q4Mjg4OGQyZDFjZTU5ZGQ2NTZhZSIsIm5iZiI6MTc1NTc3NjU3NC4zNjcsInN1YiI6IjY4YTcwNjNlNmY3MDIxYTllMWE4MWNiNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.r97B4_cAktYcRzkopNxfhWlk8ECT4zxtpkqOo7E8H64`,\n    },\n  };\n\n  try {\n    const res = await fetch(url, options);\n    return await res.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\n\nexport default getGenres;\n","const getReviews = async (movieId) => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US\n`;\n  const options = {\n    method: \"GET\",\n    headers: {\n      accept: \"application/json\",\n      Authorization: `Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4YTg5ZGU3NDM0N2Q4Mjg4OGQyZDFjZTU5ZGQ2NTZhZSIsIm5iZiI6MTc1NTc3NjU3NC4zNjcsInN1YiI6IjY4YTcwNjNlNmY3MDIxYTllMWE4MWNiNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.r97B4_cAktYcRzkopNxfhWlk8ECT4zxtpkqOo7E8H64`,\n    },\n  };\n\n  try {\n    const res = await fetch(url, options);\n    return await res.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\n\nexport default getReviews;\n","import styled from \"styled-components\";\n\nexport const Item = styled.li``;\n\nexport const Text = styled.p``;","import { Item, Text } from \"./styles/Review.styled\";\n\nconst Review = ({ author, content }) => {\n  return (\n    <Item>\n      <Text>Author: {author}</Text>\n      <Text>{content}</Text>\n    </Item>\n  );\n};\n\nexport default Review;\n","import { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport getGenres from \"../../api/getGenres\";\nimport getReviews from \"../../api/getReviews\";\n// import MovieDesc from \"../../components/MovieDesc/MovieDesc\";\nimport Review from \"./Review/Review\";\n\nconst MovieReviews = () => {\n  const [genres, setGenres] = useState([]);\n  const [genresMap, setGenresMap] = useState({});\n  const [reviews, setReviews] = useState([]);\n\n  const location = useLocation();\n  const movie = location.state?.movie;\n\n  useEffect(() => {\n    (async () => {\n      const res = await getGenres();\n      setGenres(res.genres);\n    })();\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      const res = await getReviews(movie.id);\n      setReviews(res.results);\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (genres.length > 0) {\n      const genresObj = {};\n\n      genres.forEach((genre) => {\n        genresObj[genre.id] = genre.name;\n      });\n\n      setGenresMap(genresObj);\n    }\n  }, [genres]);\n\n  return (\n    <>\n      <>\n        {reviews.length > 0 ? (reviews.map((r) => {\n          return <Review author={r.author} content={r.content} key={r.id} />\n        })) : <p>We have any reviews for this movie</p>}\n      </>\n    </>\n  );\n};\n\nexport default MovieReviews;\n"],"names":["async","options","method","headers","accept","Authorization","res","fetch","json","err","console","log","url","concat","movieId","Item","styled","li","_templateObject","_taggedTemplateLiteral","Text","p","_templateObject2","_ref","author","content","_jsxs","children","_jsx","MovieReviews","_location$state","genres","setGenres","useState","genresMap","setGenresMap","reviews","setReviews","movie","useLocation","state","useEffect","getGenres","getReviews","id","results","length","genresObj","forEach","genre","name","_Fragment","map","r","Review"],"sourceRoot":""}