{"version":3,"file":"static/js/175.de923ea2.chunk.js","mappings":"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","sources":["components/MovieDesc/styles/MovieDesc.styled.js","components/MovieDesc/MovieDesc.jsx","pages/Movie/Movie.jsx","components/MovieLayout/MovieLayout.jsx","api/getGenres.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Title = styled.h1``;\n\nexport const Img = styled.img`\n  width: 200px;\n`;\n\nexport const Subtitle = styled.h2``;\n\nexport const Text = styled.p``;","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Title, Img, Subtitle, Text } from \"./styles/MovieDesc.styled\";\n\nconst MovieDesc = ({ movie, genres }) => {\n  const [genresStr, setGenresStr] = useState(\"\");\n\n  const releaseDate = new Date(movie.release_date);\n  const releaseYear = releaseDate.getFullYear();\n\n  const rating = Math.round(movie.vote_average * 10);\n  const genreIds = movie.genre_ids;\n\n  useEffect(() => {\n    if (Object.keys(genres).length > 0) {\n      const genresArr = [];\n\n      genreIds.forEach((id) => {\n        genresArr.push(genres[id]);\n      });\n\n      setGenresStr(genresArr.join(\" \"));\n    }\n  }, [genres]);\n\n  return (\n    <>\n      <Title>\n        {movie.title} ({releaseYear})\n      </Title>\n      <Img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt=\"\" />\n\n      <Text>User score: {rating}%</Text>\n\n      <Subtitle>Overview</Subtitle>\n      <Text>{movie.overview}</Text>\n\n      <Subtitle>Genres</Subtitle>\n      <Text>{genresStr}</Text>\n\n      <Subtitle>Addition information</Subtitle>\n      <Link\n        to={`/movie/${movie.id}/cast`}\n        state={{ movie }}\n        style={{ display: \"block\" }}\n      >\n        Cast\n      </Link>\n      <Link to={`/movie/${movie.id}/reviews`} state={{ movie }}>\n        Reviews\n      </Link>\n    </>\n  );\n};\n\nexport default MovieDesc;\n","import { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport getGenres from \"../../api/getGenres\";\nimport MovieDesc from \"../../components/MovieDesc/MovieDesc\";\n\nconst Movie = () => {\n  const [genres, setGenres] = useState([]);\n  const [genresMap, setGenresMap] = useState({});\n\n  const location = useLocation();\n  const movie = location.state?.movie;\n\n  useEffect(() => {\n    (async () => {\n      const res = await getGenres();\n      setGenres(res.genres);\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (genres.length > 0) {\n      const genresObj = {};\n\n      genres.forEach((genre) => {\n        genresObj[genre.id] = genre.name;\n      });\n\n      setGenresMap(genresObj);\n    }\n  }, [genres]);\n\n  return (\n    <>\n      <MovieDesc movie={movie} genres={genresMap} />\n    </>\n  );\n};\n\nexport default Movie;\n","import { Outlet } from \"react-router-dom\";\nimport Movie from \"../../pages/Movie/Movie\";\n\nconst MovieLayout = () => {\n  return (\n    <>\n      <Movie />\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieLayout;\n","const getGenres = async () => {\n  const url = \"https://api.themoviedb.org/3/genre/movie/list?language=en-US\";\n  const options = {\n    method: \"GET\",\n    headers: {\n      accept: \"application/json\",\n      Authorization: `Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4YTg5ZGU3NDM0N2Q4Mjg4OGQyZDFjZTU5ZGQ2NTZhZSIsIm5iZiI6MTc1NTc3NjU3NC4zNjcsInN1YiI6IjY4YTcwNjNlNmY3MDIxYTllMWE4MWNiNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.r97B4_cAktYcRzkopNxfhWlk8ECT4zxtpkqOo7E8H64`,\n    },\n  };\n\n  try {\n    const res = await fetch(url, options);\n    return await res.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\n\nexport default getGenres;\n"],"names":["Title","styled","h1","_templateObject","_taggedTemplateLiteral","Img","img","_templateObject2","Subtitle","h2","_templateObject3","Text","p","_templateObject4","_ref","movie","genres","genresStr","setGenresStr","useState","releaseYear","Date","release_date","getFullYear","rating","Math","round","vote_average","genreIds","genre_ids","useEffect","Object","keys","length","genresArr","forEach","id","push","join","_jsxs","_Fragment","children","title","_jsx","src","concat","poster_path","alt","overview","Link","to","state","style","display","Movie","_location$state","setGenres","genresMap","setGenresMap","useLocation","res","getGenres","genresObj","genre","name","MovieDesc","MovieLayout","Outlet","async","options","method","headers","accept","Authorization","fetch","json","err","console","log"],"sourceRoot":""}